/*
* generated by Xtext
*/
grammar InternalCpdsl;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package configuratorProject.cpdsl.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package configuratorProject.cpdsl.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import configuratorProject.cpdsl.services.CpdslGrammarAccess;

}

@parser::members {
 
 	private CpdslGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(CpdslGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleModel
entryRuleModel 
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModelAccess().getGroup()); }
(rule__Model__Group__0)
{ after(grammarAccess.getModelAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpression
entryRuleExpression 
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpressionAccess().getAlternatives()); }
(rule__Expression__Alternatives)
{ after(grammarAccess.getExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleValue
entryRuleValue 
:
{ before(grammarAccess.getValueRule()); }
	 ruleValue
{ after(grammarAccess.getValueRule()); } 
	 EOF 
;

// Rule Value
ruleValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getValueAccess().getAlternatives()); }
(rule__Value__Alternatives)
{ after(grammarAccess.getValueAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleObject
entryRuleObject 
:
{ before(grammarAccess.getObjectRule()); }
	 ruleObject
{ after(grammarAccess.getObjectRule()); } 
	 EOF 
;

// Rule Object
ruleObject
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getObjectAccess().getGroup()); }
(rule__Object__Group__0)
{ after(grammarAccess.getObjectAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEString
entryRuleEString 
:
{ before(grammarAccess.getEStringRule()); }
	 ruleEString
{ after(grammarAccess.getEStringRule()); } 
	 EOF 
;

// Rule EString
ruleEString
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEStringAccess().getAlternatives()); }
(rule__EString__Alternatives)
{ after(grammarAccess.getEStringAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConstraint
entryRuleConstraint 
:
{ before(grammarAccess.getConstraintRule()); }
	 ruleConstraint
{ after(grammarAccess.getConstraintRule()); } 
	 EOF 
;

// Rule Constraint
ruleConstraint
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConstraintAccess().getGroup()); }
(rule__Constraint__Group__0)
{ after(grammarAccess.getConstraintAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAttribute
entryRuleAttribute 
:
{ before(grammarAccess.getAttributeRule()); }
	 ruleAttribute
{ after(grammarAccess.getAttributeRule()); } 
	 EOF 
;

// Rule Attribute
ruleAttribute
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAttributeAccess().getGroup()); }
(rule__Attribute__Group__0)
{ after(grammarAccess.getAttributeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBinary
entryRuleBinary 
:
{ before(grammarAccess.getBinaryRule()); }
	 ruleBinary
{ after(grammarAccess.getBinaryRule()); } 
	 EOF 
;

// Rule Binary
ruleBinary
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBinaryAccess().getGroup()); }
(rule__Binary__Group__0)
{ after(grammarAccess.getBinaryAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUnary
entryRuleUnary 
:
{ before(grammarAccess.getUnaryRule()); }
	 ruleUnary
{ after(grammarAccess.getUnaryRule()); } 
	 EOF 
;

// Rule Unary
ruleUnary
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUnaryAccess().getGroup()); }
(rule__Unary__Group__0)
{ after(grammarAccess.getUnaryAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleString0
entryRuleString0 
:
{ before(grammarAccess.getString0Rule()); }
	 ruleString0
{ after(grammarAccess.getString0Rule()); } 
	 EOF 
;

// Rule String0
ruleString0
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getString0Access().getGroup()); }
(rule__String0__Group__0)
{ after(grammarAccess.getString0Access().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInt0
entryRuleInt0 
:
{ before(grammarAccess.getInt0Rule()); }
	 ruleInt0
{ after(grammarAccess.getInt0Rule()); } 
	 EOF 
;

// Rule Int0
ruleInt0
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInt0Access().getGroup()); }
(rule__Int0__Group__0)
{ after(grammarAccess.getInt0Access().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBoolLiteral
entryRuleBoolLiteral 
:
{ before(grammarAccess.getBoolLiteralRule()); }
	 ruleBoolLiteral
{ after(grammarAccess.getBoolLiteralRule()); } 
	 EOF 
;

// Rule BoolLiteral
ruleBoolLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBoolLiteralAccess().getGroup()); }
(rule__BoolLiteral__Group__0)
{ after(grammarAccess.getBoolLiteralAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIdentifier
entryRuleIdentifier 
:
{ before(grammarAccess.getIdentifierRule()); }
	 ruleIdentifier
{ after(grammarAccess.getIdentifierRule()); } 
	 EOF 
;

// Rule Identifier
ruleIdentifier
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIdentifierAccess().getGroup()); }
(rule__Identifier__Group__0)
{ after(grammarAccess.getIdentifierAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAnyURI
entryRuleAnyURI 
:
{ before(grammarAccess.getAnyURIRule()); }
	 ruleAnyURI
{ after(grammarAccess.getAnyURIRule()); } 
	 EOF 
;

// Rule AnyURI
ruleAnyURI
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAnyURIAccess().getAnyURIKeyword()); }

	'AnyURI' 

{ after(grammarAccess.getAnyURIAccess().getAnyURIKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInt1
entryRuleInt1 
:
{ before(grammarAccess.getInt1Rule()); }
	 ruleInt1
{ after(grammarAccess.getInt1Rule()); } 
	 EOF 
;

// Rule Int1
ruleInt1
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInt1Access().getIntKeyword()); }

	'Int' 

{ after(grammarAccess.getInt1Access().getIntKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBoolean
entryRuleBoolean 
:
{ before(grammarAccess.getBooleanRule()); }
	 ruleBoolean
{ after(grammarAccess.getBooleanRule()); } 
	 EOF 
;

// Rule Boolean
ruleBoolean
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBooleanAccess().getBooleanKeyword()); }

	'Boolean' 

{ after(grammarAccess.getBooleanAccess().getBooleanKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEnum
entryRuleEnum 
:
{ before(grammarAccess.getEnumRule()); }
	 ruleEnum
{ after(grammarAccess.getEnumRule()); } 
	 EOF 
;

// Rule Enum
ruleEnum
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEnumAccess().getGroup()); }
(rule__Enum__Group__0)
{ after(grammarAccess.getEnumAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBooleanValue
entryRuleBooleanValue 
:
{ before(grammarAccess.getBooleanValueRule()); }
	 ruleBooleanValue
{ after(grammarAccess.getBooleanValueRule()); } 
	 EOF 
;

// Rule BooleanValue
ruleBooleanValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBooleanValueAccess().getGroup()); }
(rule__BooleanValue__Group__0)
{ after(grammarAccess.getBooleanValueAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRange
entryRuleRange 
:
{ before(grammarAccess.getRangeRule()); }
	 ruleRange
{ after(grammarAccess.getRangeRule()); } 
	 EOF 
;

// Rule Range
ruleRange
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRangeAccess().getGroup()); }
(rule__Range__Group__0)
{ after(grammarAccess.getRangeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAnySimpleType
entryRuleAnySimpleType 
:
{ before(grammarAccess.getAnySimpleTypeRule()); }
	 ruleAnySimpleType
{ after(grammarAccess.getAnySimpleTypeRule()); } 
	 EOF 
;

// Rule AnySimpleType
ruleAnySimpleType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAnySimpleTypeAccess().getAnySimpleTypeKeyword()); }

	'AnySimpleType' 

{ after(grammarAccess.getAnySimpleTypeAccess().getAnySimpleTypeKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}




// Rule BinaryOparators
ruleBinaryOparators
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryOparatorsAccess().getAlternatives()); }
(rule__BinaryOparators__Alternatives)
{ after(grammarAccess.getBinaryOparatorsAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule UnaryOparators
ruleUnaryOparators
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryOparatorsAccess().getNotEnumLiteralDeclaration()); }
(	'not' 
)
{ after(grammarAccess.getUnaryOparatorsAccess().getNotEnumLiteralDeclaration()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Expression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getBinaryParserRuleCall_0()); }
	ruleBinary
{ after(grammarAccess.getExpressionAccess().getBinaryParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getExpressionAccess().getUnaryParserRuleCall_1()); }
	ruleUnary
{ after(grammarAccess.getExpressionAccess().getUnaryParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getExpressionAccess().getString0ParserRuleCall_2()); }
	ruleString0
{ after(grammarAccess.getExpressionAccess().getString0ParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getExpressionAccess().getInt0ParserRuleCall_3()); }
	ruleInt0
{ after(grammarAccess.getExpressionAccess().getInt0ParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getExpressionAccess().getBoolLiteralParserRuleCall_4()); }
	ruleBoolLiteral
{ after(grammarAccess.getExpressionAccess().getBoolLiteralParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getExpressionAccess().getIdentifierParserRuleCall_5()); }
	ruleIdentifier
{ after(grammarAccess.getExpressionAccess().getIdentifierParserRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueAccess().getEnumParserRuleCall_0()); }
	ruleEnum
{ after(grammarAccess.getValueAccess().getEnumParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getValueAccess().getBooleanValueParserRuleCall_1()); }
	ruleBooleanValue
{ after(grammarAccess.getValueAccess().getBooleanValueParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getValueAccess().getRangeParserRuleCall_2()); }
	ruleRange
{ after(grammarAccess.getValueAccess().getRangeParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EString__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
	RULE_STRING
{ after(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
	RULE_ID
{ after(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryOparators__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryOparatorsAccess().getAndEnumLiteralDeclaration_0()); }
(	'and' 
)
{ after(grammarAccess.getBinaryOparatorsAccess().getAndEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getBinaryOparatorsAccess().getOrEnumLiteralDeclaration_1()); }
(	'or' 
)
{ after(grammarAccess.getBinaryOparatorsAccess().getOrEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getBinaryOparatorsAccess().getGtEnumLiteralDeclaration_2()); }
(	'gt' 
)
{ after(grammarAccess.getBinaryOparatorsAccess().getGtEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getBinaryOparatorsAccess().getLtEnumLiteralDeclaration_3()); }
(	'lt' 
)
{ after(grammarAccess.getBinaryOparatorsAccess().getLtEnumLiteralDeclaration_3()); }
)

    |(
{ before(grammarAccess.getBinaryOparatorsAccess().getEqEnumLiteralDeclaration_4()); }
(	'eq' 
)
{ after(grammarAccess.getBinaryOparatorsAccess().getEqEnumLiteralDeclaration_4()); }
)

    |(
{ before(grammarAccess.getBinaryOparatorsAccess().getIsEnumLiteralDeclaration_5()); }
(	'is' 
)
{ after(grammarAccess.getBinaryOparatorsAccess().getIsEnumLiteralDeclaration_5()); }
)

    |(
{ before(grammarAccess.getBinaryOparatorsAccess().getIfEnumLiteralDeclaration_6()); }
(	'if' 
)
{ after(grammarAccess.getBinaryOparatorsAccess().getIfEnumLiteralDeclaration_6()); }
)

    |(
{ before(grammarAccess.getBinaryOparatorsAccess().getThenEnumLiteralDeclaration_7()); }
(	'then' 
)
{ after(grammarAccess.getBinaryOparatorsAccess().getThenEnumLiteralDeclaration_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Model__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__0__Impl
	rule__Model__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getModelAction_0()); }
(

)
{ after(grammarAccess.getModelAccess().getModelAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__1__Impl
	rule__Model__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getModelKeyword_1()); }

	'Model' 

{ after(grammarAccess.getModelAccess().getModelKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__2__Impl
	rule__Model__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getModelAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__3__Impl
	rule__Model__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getGroup_3()); }
(rule__Model__Group_3__0)?
{ after(grammarAccess.getModelAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getModelAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Model__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group_3__0__Impl
	rule__Model__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getContainsKeyword_3_0()); }

	'Contains' 

{ after(grammarAccess.getModelAccess().getContainsKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group_3__1__Impl
	rule__Model__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getLeftCurlyBracketKeyword_3_1()); }

	'{' 

{ after(grammarAccess.getModelAccess().getLeftCurlyBracketKeyword_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group_3__2__Impl
	rule__Model__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getContainsAssignment_3_2()); }
(rule__Model__ContainsAssignment_3_2)
{ after(grammarAccess.getModelAccess().getContainsAssignment_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group_3__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group_3__3__Impl
	rule__Model__Group_3__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_3__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getGroup_3_3()); }
(rule__Model__Group_3_3__0)*
{ after(grammarAccess.getModelAccess().getGroup_3_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group_3__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group_3__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_3__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getRightCurlyBracketKeyword_3_4()); }

	'}' 

{ after(grammarAccess.getModelAccess().getRightCurlyBracketKeyword_3_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Model__Group_3_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group_3_3__0__Impl
	rule__Model__Group_3_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_3_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getCommaKeyword_3_3_0()); }

	',' 

{ after(grammarAccess.getModelAccess().getCommaKeyword_3_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group_3_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group_3_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_3_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getContainsAssignment_3_3_1()); }
(rule__Model__ContainsAssignment_3_3_1)
{ after(grammarAccess.getModelAccess().getContainsAssignment_3_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Object__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Object__Group__0__Impl
	rule__Object__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectAccess().getObjectAction_0()); }
(

)
{ after(grammarAccess.getObjectAccess().getObjectAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Object__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Object__Group__1__Impl
	rule__Object__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectAccess().getObjectKeyword_1()); }

	'Object' 

{ after(grammarAccess.getObjectAccess().getObjectKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Object__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Object__Group__2__Impl
	rule__Object__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectAccess().getNameAssignment_2()); }
(rule__Object__NameAssignment_2)
{ after(grammarAccess.getObjectAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Object__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Object__Group__3__Impl
	rule__Object__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectAccess().getLeftCurlyBracketKeyword_3()); }

	'{' 

{ after(grammarAccess.getObjectAccess().getLeftCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Object__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Object__Group__4__Impl
	rule__Object__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectAccess().getGroup_4()); }
(rule__Object__Group_4__0)?
{ after(grammarAccess.getObjectAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Object__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Object__Group__5__Impl
	rule__Object__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectAccess().getGroup_5()); }
(rule__Object__Group_5__0)?
{ after(grammarAccess.getObjectAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Object__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Object__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectAccess().getRightCurlyBracketKeyword_6()); }

	'}' 

{ after(grammarAccess.getObjectAccess().getRightCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__Object__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Object__Group_4__0__Impl
	rule__Object__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectAccess().getHasKeyword_4_0()); }

	'Has' 

{ after(grammarAccess.getObjectAccess().getHasKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Object__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Object__Group_4__1__Impl
	rule__Object__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectAccess().getLeftCurlyBracketKeyword_4_1()); }

	'{' 

{ after(grammarAccess.getObjectAccess().getLeftCurlyBracketKeyword_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Object__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Object__Group_4__2__Impl
	rule__Object__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectAccess().getHasAssignment_4_2()); }
(rule__Object__HasAssignment_4_2)
{ after(grammarAccess.getObjectAccess().getHasAssignment_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Object__Group_4__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Object__Group_4__3__Impl
	rule__Object__Group_4__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group_4__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectAccess().getGroup_4_3()); }
(rule__Object__Group_4_3__0)*
{ after(grammarAccess.getObjectAccess().getGroup_4_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Object__Group_4__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Object__Group_4__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group_4__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectAccess().getRightCurlyBracketKeyword_4_4()); }

	'}' 

{ after(grammarAccess.getObjectAccess().getRightCurlyBracketKeyword_4_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Object__Group_4_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Object__Group_4_3__0__Impl
	rule__Object__Group_4_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group_4_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectAccess().getCommaKeyword_4_3_0()); }

	',' 

{ after(grammarAccess.getObjectAccess().getCommaKeyword_4_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Object__Group_4_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Object__Group_4_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group_4_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectAccess().getHasAssignment_4_3_1()); }
(rule__Object__HasAssignment_4_3_1)
{ after(grammarAccess.getObjectAccess().getHasAssignment_4_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Object__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Object__Group_5__0__Impl
	rule__Object__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectAccess().getContainsKeyword_5_0()); }

	'Contains' 

{ after(grammarAccess.getObjectAccess().getContainsKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Object__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Object__Group_5__1__Impl
	rule__Object__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectAccess().getLeftCurlyBracketKeyword_5_1()); }

	'{' 

{ after(grammarAccess.getObjectAccess().getLeftCurlyBracketKeyword_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Object__Group_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Object__Group_5__2__Impl
	rule__Object__Group_5__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectAccess().getContainsAssignment_5_2()); }
(rule__Object__ContainsAssignment_5_2)
{ after(grammarAccess.getObjectAccess().getContainsAssignment_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Object__Group_5__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Object__Group_5__3__Impl
	rule__Object__Group_5__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group_5__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectAccess().getGroup_5_3()); }
(rule__Object__Group_5_3__0)*
{ after(grammarAccess.getObjectAccess().getGroup_5_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Object__Group_5__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Object__Group_5__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group_5__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectAccess().getRightCurlyBracketKeyword_5_4()); }

	'}' 

{ after(grammarAccess.getObjectAccess().getRightCurlyBracketKeyword_5_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Object__Group_5_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Object__Group_5_3__0__Impl
	rule__Object__Group_5_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group_5_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectAccess().getCommaKeyword_5_3_0()); }

	',' 

{ after(grammarAccess.getObjectAccess().getCommaKeyword_5_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Object__Group_5_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Object__Group_5_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group_5_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectAccess().getContainsAssignment_5_3_1()); }
(rule__Object__ContainsAssignment_5_3_1)
{ after(grammarAccess.getObjectAccess().getContainsAssignment_5_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Constraint__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constraint__Group__0__Impl
	rule__Constraint__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintAccess().getConstraintKeyword_0()); }

	'Constraint' 

{ after(grammarAccess.getConstraintAccess().getConstraintKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constraint__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constraint__Group__1__Impl
	rule__Constraint__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getConstraintAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constraint__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constraint__Group__2__Impl
	rule__Constraint__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintAccess().getContainsKeyword_2()); }

	'Contains' 

{ after(grammarAccess.getConstraintAccess().getContainsKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constraint__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constraint__Group__3__Impl
	rule__Constraint__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintAccess().getContainsAssignment_3()); }
(rule__Constraint__ContainsAssignment_3)
{ after(grammarAccess.getConstraintAccess().getContainsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constraint__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constraint__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getConstraintAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Attribute__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group__0__Impl
	rule__Attribute__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getAttributeKeyword_0()); }

	'Attribute' 

{ after(grammarAccess.getAttributeAccess().getAttributeKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group__1__Impl
	rule__Attribute__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getNameAssignment_1()); }
(rule__Attribute__NameAssignment_1)
{ after(grammarAccess.getAttributeAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group__2__Impl
	rule__Attribute__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getAttributeAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group__3__Impl
	rule__Attribute__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getContainsKeyword_3()); }

	'Contains' 

{ after(grammarAccess.getAttributeAccess().getContainsKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group__4__Impl
	rule__Attribute__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getContainsAssignment_4()); }
(rule__Attribute__ContainsAssignment_4)
{ after(grammarAccess.getAttributeAccess().getContainsAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getRightCurlyBracketKeyword_5()); }

	'}' 

{ after(grammarAccess.getAttributeAccess().getRightCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Binary__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Binary__Group__0__Impl
	rule__Binary__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Binary__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryAccess().getBinaryKeyword_0()); }

	'Binary' 

{ after(grammarAccess.getBinaryAccess().getBinaryKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Binary__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Binary__Group__1__Impl
	rule__Binary__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Binary__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getBinaryAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Binary__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Binary__Group__2__Impl
	rule__Binary__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Binary__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryAccess().getGroup_2()); }
(rule__Binary__Group_2__0)?
{ after(grammarAccess.getBinaryAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Binary__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Binary__Group__3__Impl
	rule__Binary__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Binary__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryAccess().getLeftKeyword_3()); }

	'Left' 

{ after(grammarAccess.getBinaryAccess().getLeftKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Binary__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Binary__Group__4__Impl
	rule__Binary__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Binary__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryAccess().getLeftAssignment_4()); }
(rule__Binary__LeftAssignment_4)
{ after(grammarAccess.getBinaryAccess().getLeftAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Binary__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Binary__Group__5__Impl
	rule__Binary__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Binary__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryAccess().getRightKeyword_5()); }

	'Right' 

{ after(grammarAccess.getBinaryAccess().getRightKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Binary__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Binary__Group__6__Impl
	rule__Binary__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Binary__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryAccess().getRightAssignment_6()); }
(rule__Binary__RightAssignment_6)
{ after(grammarAccess.getBinaryAccess().getRightAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Binary__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Binary__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Binary__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryAccess().getRightCurlyBracketKeyword_7()); }

	'}' 

{ after(grammarAccess.getBinaryAccess().getRightCurlyBracketKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__Binary__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Binary__Group_2__0__Impl
	rule__Binary__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Binary__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryAccess().getOparandKeyword_2_0()); }

	'Oparand' 

{ after(grammarAccess.getBinaryAccess().getOparandKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Binary__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Binary__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Binary__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryAccess().getOparandAssignment_2_1()); }
(rule__Binary__OparandAssignment_2_1)
{ after(grammarAccess.getBinaryAccess().getOparandAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Unary__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Unary__Group__0__Impl
	rule__Unary__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Unary__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryAccess().getUnaryKeyword_0()); }

	'Unary' 

{ after(grammarAccess.getUnaryAccess().getUnaryKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Unary__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Unary__Group__1__Impl
	rule__Unary__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Unary__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getUnaryAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Unary__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Unary__Group__2__Impl
	rule__Unary__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Unary__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryAccess().getGroup_2()); }
(rule__Unary__Group_2__0)?
{ after(grammarAccess.getUnaryAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Unary__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Unary__Group__3__Impl
	rule__Unary__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Unary__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryAccess().getExpressionKeyword_3()); }

	'Expression' 

{ after(grammarAccess.getUnaryAccess().getExpressionKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Unary__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Unary__Group__4__Impl
	rule__Unary__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Unary__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryAccess().getExpressionAssignment_4()); }
(rule__Unary__ExpressionAssignment_4)
{ after(grammarAccess.getUnaryAccess().getExpressionAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Unary__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Unary__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Unary__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryAccess().getRightCurlyBracketKeyword_5()); }

	'}' 

{ after(grammarAccess.getUnaryAccess().getRightCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Unary__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Unary__Group_2__0__Impl
	rule__Unary__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Unary__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryAccess().getOparandKeyword_2_0()); }

	'Oparand' 

{ after(grammarAccess.getUnaryAccess().getOparandKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Unary__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Unary__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Unary__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryAccess().getOparandAssignment_2_1()); }
(rule__Unary__OparandAssignment_2_1)
{ after(grammarAccess.getUnaryAccess().getOparandAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__String0__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__String0__Group__0__Impl
	rule__String0__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__String0__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getString0Access().getStringKeyword_0()); }

	'String' 

{ after(grammarAccess.getString0Access().getStringKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__String0__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__String0__Group__1__Impl
	rule__String0__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__String0__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getString0Access().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getString0Access().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__String0__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__String0__Group__2__Impl
	rule__String0__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__String0__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getString0Access().getValueKeyword_2()); }

	'value' 

{ after(grammarAccess.getString0Access().getValueKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__String0__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__String0__Group__3__Impl
	rule__String0__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__String0__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getString0Access().getValueAssignment_3()); }
(rule__String0__ValueAssignment_3)
{ after(grammarAccess.getString0Access().getValueAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__String0__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__String0__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__String0__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getString0Access().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getString0Access().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Int0__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Int0__Group__0__Impl
	rule__Int0__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Int0__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInt0Access().getIntKeyword_0()); }

	'Int' 

{ after(grammarAccess.getInt0Access().getIntKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Int0__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Int0__Group__1__Impl
	rule__Int0__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Int0__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInt0Access().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getInt0Access().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Int0__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Int0__Group__2__Impl
	rule__Int0__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Int0__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInt0Access().getValueKeyword_2()); }

	'value' 

{ after(grammarAccess.getInt0Access().getValueKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Int0__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Int0__Group__3__Impl
	rule__Int0__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Int0__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInt0Access().getValueAssignment_3()); }
(rule__Int0__ValueAssignment_3)
{ after(grammarAccess.getInt0Access().getValueAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Int0__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Int0__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Int0__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInt0Access().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getInt0Access().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__BoolLiteral__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BoolLiteral__Group__0__Impl
	rule__BoolLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolLiteral__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBoolLiteralAccess().getBoolLiteralKeyword_0()); }

	'BoolLiteral' 

{ after(grammarAccess.getBoolLiteralAccess().getBoolLiteralKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BoolLiteral__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BoolLiteral__Group__1__Impl
	rule__BoolLiteral__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolLiteral__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBoolLiteralAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getBoolLiteralAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BoolLiteral__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BoolLiteral__Group__2__Impl
	rule__BoolLiteral__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolLiteral__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBoolLiteralAccess().getValueKeyword_2()); }

	'value' 

{ after(grammarAccess.getBoolLiteralAccess().getValueKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BoolLiteral__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BoolLiteral__Group__3__Impl
	rule__BoolLiteral__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolLiteral__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBoolLiteralAccess().getValueAssignment_3()); }
(rule__BoolLiteral__ValueAssignment_3)
{ after(grammarAccess.getBoolLiteralAccess().getValueAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BoolLiteral__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BoolLiteral__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolLiteral__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBoolLiteralAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getBoolLiteralAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Identifier__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Identifier__Group__0__Impl
	rule__Identifier__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Identifier__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdentifierAccess().getIdentifierKeyword_0()); }

	'Identifier' 

{ after(grammarAccess.getIdentifierAccess().getIdentifierKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Identifier__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Identifier__Group__1__Impl
	rule__Identifier__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Identifier__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdentifierAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getIdentifierAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Identifier__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Identifier__Group__2__Impl
	rule__Identifier__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Identifier__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdentifierAccess().getIsKeyword_2()); }

	'Is' 

{ after(grammarAccess.getIdentifierAccess().getIsKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Identifier__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Identifier__Group__3__Impl
	rule__Identifier__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Identifier__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdentifierAccess().getIsAssignment_3()); }
(rule__Identifier__IsAssignment_3)
{ after(grammarAccess.getIdentifierAccess().getIsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Identifier__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Identifier__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Identifier__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdentifierAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getIdentifierAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Enum__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Enum__Group__0__Impl
	rule__Enum__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumAccess().getEnumKeyword_0()); }

	'Enum' 

{ after(grammarAccess.getEnumAccess().getEnumKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Enum__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Enum__Group__1__Impl
	rule__Enum__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getEnumAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Enum__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Enum__Group__2__Impl
	rule__Enum__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumAccess().getValuesKeyword_2()); }

	'values' 

{ after(grammarAccess.getEnumAccess().getValuesKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Enum__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Enum__Group__3__Impl
	rule__Enum__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumAccess().getLeftCurlyBracketKeyword_3()); }

	'{' 

{ after(grammarAccess.getEnumAccess().getLeftCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Enum__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Enum__Group__4__Impl
	rule__Enum__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumAccess().getValuesAssignment_4()); }
(rule__Enum__ValuesAssignment_4)
{ after(grammarAccess.getEnumAccess().getValuesAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Enum__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Enum__Group__5__Impl
	rule__Enum__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumAccess().getGroup_5()); }
(rule__Enum__Group_5__0)*
{ after(grammarAccess.getEnumAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Enum__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Enum__Group__6__Impl
	rule__Enum__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumAccess().getRightCurlyBracketKeyword_6()); }

	'}' 

{ after(grammarAccess.getEnumAccess().getRightCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Enum__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Enum__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumAccess().getRightCurlyBracketKeyword_7()); }

	'}' 

{ after(grammarAccess.getEnumAccess().getRightCurlyBracketKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__Enum__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Enum__Group_5__0__Impl
	rule__Enum__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumAccess().getCommaKeyword_5_0()); }

	',' 

{ after(grammarAccess.getEnumAccess().getCommaKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Enum__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Enum__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumAccess().getValuesAssignment_5_1()); }
(rule__Enum__ValuesAssignment_5_1)
{ after(grammarAccess.getEnumAccess().getValuesAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__BooleanValue__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BooleanValue__Group__0__Impl
	rule__BooleanValue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanValue__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanValueAccess().getBooleanValueKeyword_0()); }

	'BooleanValue' 

{ after(grammarAccess.getBooleanValueAccess().getBooleanValueKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanValue__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BooleanValue__Group__1__Impl
	rule__BooleanValue__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanValue__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanValueAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getBooleanValueAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanValue__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BooleanValue__Group__2__Impl
	rule__BooleanValue__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanValue__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanValueAccess().getTrueValueKeyword_2()); }

	'trueValue' 

{ after(grammarAccess.getBooleanValueAccess().getTrueValueKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanValue__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BooleanValue__Group__3__Impl
	rule__BooleanValue__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanValue__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanValueAccess().getTrueValueAssignment_3()); }
(rule__BooleanValue__TrueValueAssignment_3)
{ after(grammarAccess.getBooleanValueAccess().getTrueValueAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanValue__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BooleanValue__Group__4__Impl
	rule__BooleanValue__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanValue__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanValueAccess().getFalseValueKeyword_4()); }

	'falseValue' 

{ after(grammarAccess.getBooleanValueAccess().getFalseValueKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanValue__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BooleanValue__Group__5__Impl
	rule__BooleanValue__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanValue__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanValueAccess().getFalseValueAssignment_5()); }
(rule__BooleanValue__FalseValueAssignment_5)
{ after(grammarAccess.getBooleanValueAccess().getFalseValueAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanValue__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BooleanValue__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanValue__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanValueAccess().getRightCurlyBracketKeyword_6()); }

	'}' 

{ after(grammarAccess.getBooleanValueAccess().getRightCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__Range__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Range__Group__0__Impl
	rule__Range__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Range__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeAccess().getRangeKeyword_0()); }

	'Range' 

{ after(grammarAccess.getRangeAccess().getRangeKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Range__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Range__Group__1__Impl
	rule__Range__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Range__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getRangeAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Range__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Range__Group__2__Impl
	rule__Range__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Range__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeAccess().getRangeKeyword_2()); }

	'range' 

{ after(grammarAccess.getRangeAccess().getRangeKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Range__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Range__Group__3__Impl
	rule__Range__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Range__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeAccess().getRangeAssignment_3()); }
(rule__Range__RangeAssignment_3)
{ after(grammarAccess.getRangeAccess().getRangeAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Range__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Range__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Range__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getRangeAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}













rule__Model__ContainsAssignment_3_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getContainsObjectParserRuleCall_3_2_0()); }
	ruleObject{ after(grammarAccess.getModelAccess().getContainsObjectParserRuleCall_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Model__ContainsAssignment_3_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getContainsObjectParserRuleCall_3_3_1_0()); }
	ruleObject{ after(grammarAccess.getModelAccess().getContainsObjectParserRuleCall_3_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Object__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectAccess().getNameEStringParserRuleCall_2_0()); }
	ruleEString{ after(grammarAccess.getObjectAccess().getNameEStringParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Object__HasAssignment_4_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectAccess().getHasConstraintParserRuleCall_4_2_0()); }
	ruleConstraint{ after(grammarAccess.getObjectAccess().getHasConstraintParserRuleCall_4_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Object__HasAssignment_4_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectAccess().getHasConstraintParserRuleCall_4_3_1_0()); }
	ruleConstraint{ after(grammarAccess.getObjectAccess().getHasConstraintParserRuleCall_4_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Object__ContainsAssignment_5_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectAccess().getContainsAttributeParserRuleCall_5_2_0()); }
	ruleAttribute{ after(grammarAccess.getObjectAccess().getContainsAttributeParserRuleCall_5_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Object__ContainsAssignment_5_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectAccess().getContainsAttributeParserRuleCall_5_3_1_0()); }
	ruleAttribute{ after(grammarAccess.getObjectAccess().getContainsAttributeParserRuleCall_5_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__ContainsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintAccess().getContainsExpressionParserRuleCall_3_0()); }
	ruleExpression{ after(grammarAccess.getConstraintAccess().getContainsExpressionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getNameEStringParserRuleCall_1_0()); }
	ruleEString{ after(grammarAccess.getAttributeAccess().getNameEStringParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__ContainsAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getContainsValueParserRuleCall_4_0()); }
	ruleValue{ after(grammarAccess.getAttributeAccess().getContainsValueParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Binary__OparandAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryAccess().getOparandBinaryOparatorsEnumRuleCall_2_1_0()); }
	ruleBinaryOparators{ after(grammarAccess.getBinaryAccess().getOparandBinaryOparatorsEnumRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Binary__LeftAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryAccess().getLeftExpressionParserRuleCall_4_0()); }
	ruleExpression{ after(grammarAccess.getBinaryAccess().getLeftExpressionParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Binary__RightAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryAccess().getRightExpressionParserRuleCall_6_0()); }
	ruleExpression{ after(grammarAccess.getBinaryAccess().getRightExpressionParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Unary__OparandAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryAccess().getOparandUnaryOparatorsEnumRuleCall_2_1_0()); }
	ruleUnaryOparators{ after(grammarAccess.getUnaryAccess().getOparandUnaryOparatorsEnumRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Unary__ExpressionAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryAccess().getExpressionExpressionParserRuleCall_4_0()); }
	ruleExpression{ after(grammarAccess.getUnaryAccess().getExpressionExpressionParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__String0__ValueAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getString0Access().getValueAnyURIParserRuleCall_3_0()); }
	ruleAnyURI{ after(grammarAccess.getString0Access().getValueAnyURIParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Int0__ValueAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInt0Access().getValueInt1ParserRuleCall_3_0()); }
	ruleInt1{ after(grammarAccess.getInt0Access().getValueInt1ParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BoolLiteral__ValueAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBoolLiteralAccess().getValueBooleanParserRuleCall_3_0()); }
	ruleBoolean{ after(grammarAccess.getBoolLiteralAccess().getValueBooleanParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Identifier__IsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdentifierAccess().getIsAttributeCrossReference_3_0()); }
(
{ before(grammarAccess.getIdentifierAccess().getIsAttributeEStringParserRuleCall_3_0_1()); }
	ruleEString{ after(grammarAccess.getIdentifierAccess().getIsAttributeEStringParserRuleCall_3_0_1()); }
)
{ after(grammarAccess.getIdentifierAccess().getIsAttributeCrossReference_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__ValuesAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumAccess().getValuesAnySimpleTypeParserRuleCall_4_0()); }
	ruleAnySimpleType{ after(grammarAccess.getEnumAccess().getValuesAnySimpleTypeParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__ValuesAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumAccess().getValuesAnySimpleTypeParserRuleCall_5_1_0()); }
	ruleAnySimpleType{ after(grammarAccess.getEnumAccess().getValuesAnySimpleTypeParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanValue__TrueValueAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanValueAccess().getTrueValueAnyURIParserRuleCall_3_0()); }
	ruleAnyURI{ after(grammarAccess.getBooleanValueAccess().getTrueValueAnyURIParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanValue__FalseValueAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanValueAccess().getFalseValueAnyURIParserRuleCall_5_0()); }
	ruleAnyURI{ after(grammarAccess.getBooleanValueAccess().getFalseValueAnyURIParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Range__RangeAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeAccess().getRangeAnySimpleTypeParserRuleCall_3_0()); }
	ruleAnySimpleType{ after(grammarAccess.getRangeAccess().getRangeAnySimpleTypeParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


